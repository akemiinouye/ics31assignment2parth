#include "LinkedList.h"
#include <iostream>
using namespace std;

LinkedList::LinkedList() {
    head = NULL;
    loginCount = 0;
};

bool LinkedList::isEmpty(Node* head) {
    if (head -> next == NULL)
        return true;
    
    else
        return false;
}

char LinkedList::commandOptions() {
    char command;
    cout << "Options: CREATE, LOGIN, REMOVE, CLEAR, QUIT";
    cin >> command;
    return command;
}

void LinkedList::insertAsFirstElement(Node *&head, Node *&last, string inputUN, string inputPW) {
    temp = new Node;
    temp -> username = inputUN;
    temp -> password = inputPW;
    temp -> next = NULL;
    head = temp;
    last = temp;
    loginCount = 1;
    //delete temp;
}

void LinkedList::insert(Node *&head, Node *&last, string inputUN, string inputPW){
    if (isEmpty(head))
        insertAsFirstElement(head, last, inputUN, inputPW);
        
    else{
        temp = new Node;
        temp -> username = inputUN;
        temp -> password = inputPW;
        temp -> next = NULL;
        last -> next = temp;
        last = temp;
        loginCount++;
        //delete temp;
    }
}

/*void LinkedList::searchForMatch(Node *&head, Node *&last, string inputUN){
    
}


void LinkedList::remove(Node *&head, Node *&last, string inputUN){
    if (isEmpty(head))
        cout << "NONEXISTENT";
    
    else{
        for(i=0; i<loginCount; i++){
            
        }
        
    }
}
void clear(Node *&head, Node *&last);*/


